name: BE - CD

on:
  push:
    branches: [deploy]
    paths:
      [
        "src/**",
        "build.gradle",
      ]

permissions:
  contents: read

jobs:
  be-test:
    name: test spring boot
    runs-on: ubuntu-20.04

    steps:
      - name: setup repo
        uses: actions/checkout@v3

      - name: setup java 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: gradle

      - name: use gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: grant execute permission for gradlew
        run: chmod +x gradlew

      - name: build with gradle
        run: ./gradlew build

  push_to_registry:
    name: Push to ncp container registry
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to NCP Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.NCP_CONTAINER_REGISTRY }}
          username: ${{ secrets.NCP_ACCESS_KEY }}
          password: ${{ secrets.NCP_SECRET_KEY }}
      - name: build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.NCP_CONTAINER_REGISTRY }}/woohaengsi-backend:latest
          cache-from: type=registry,ref=${{ secrets.NCP_CONTAINER_REGISTRY }}/woohaengsi-backend:latest
          cache-to: type=inline

  pull_from_registry:
    name: Connect server ssh and pull from container registry
    needs: push_to_registry
    runs-on: ubuntu-latest
    steps:
      - name: connect ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NCP_SERVER_IP }}
          username: ${{ secrets.NCP_SERVER_USERNAME }}
          password: ${{ secrets.NCP_SERVER_PASSWORD }}
          port: ${{ secrets.NCP_SERVER_PORT }}
          script: |
            docker pull ${{ secrets.NCP_CONTAINER_REGISTRY }}/woohaengsi-backend
            docker stop $(docker ps -a -q)
            docker rm $(docker ps -a -q)
            docker run -d  --name woohaengsi-backend ${{ secrets.NCP_CONTAINER_REGISTRY }}/woohaengsi-backend
            docker image prune -f
